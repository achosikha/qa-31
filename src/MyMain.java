/**
 * Специальная система документирования в Джава. Которая имеет многие схожие элементы с HTML
 * @author ArchilSikharulidze
 * JAVADOC SYSTEM
 */

// One-line comment

/*
Welcome to Java Basics.
This is a TMS QA Course for the JAVA beginners.
 */

// src - source code, исходный код содержит ваш рабочий код
// Рабочий код всегда хранится в документе с расширением .java
// MyMain.java - любой документ с таким расширением автоматически является исходным/рабочик кодом

// .class - это рабочий код, который был переведен на байт-код, т.е. его откомпилировали
// Рабочий код, получил приказ отработать и создать выполняемый код на машине
// он превратил ваш обычный код в байт-код, создал документ типа - MyMain.class
// Компьютер будет выводить результат работы документа MyMain.class

// Стандарты разработки и оформления кода
// 1. Джава - любой код пишется внутри структуры КЛАСС
// 2. Следовательно, любой код является частью ОБЪЕКТА
// !!! JAVA это в первую очередь - язык программирования, который ориентирован НА ООП
// Объекто-ориентированное-программирование
// Есть несколько парадигм программирование - функциональное (язык С), ООП (Джава), мултипарадигменное (которое может
// включать в себя разные элементы, например, JS там есть и функиональное, есть и ООП, а можно и без того и другого

// 3. Класс эта реализация ОБЪЕКТА
// 4. Для создания КЛАССА используется ключевое слово - class
// 5. Ключевое слово - это специально зарезервированные слова, которые ваш компилятор воспринимается
// как часть языка программирования
// 6. Поэтому, эти зарезервированные слова не могут быть отдельно использованы в вашем коде, как переменные или
// какие-то другие названия

// Стандарт написания КЛАССОВ, МЕТОДОВ и ИМЕН ПЕРЕМЕННЫХ
// 1. Если объект - он должен быть существительным - House, Person, Game, Key
// 1.1. Елси вам нужно многосоставное - MyGame, MyPerson, UserName, FlatCircle
// 1.2. MyRegularGame, MyLoggingKey
// 2. Каждый объект/класс пишется всегда с большой буквы, потом заканчивается слово и следующее опять пишеться с
// большой буквы: MyMain, MyHouse, StaffMember
// Такой стиль написания называется - UpperCamelCase
// my_house, my_letter_house - SNAKE STYLE - C/C++
class MyMain{
    // Есть группа языков типа-С: C, C++, Java, C#, JS
    // ТОЧКА ВХОДА - entry point
    // ТОЧКА ВХОДА - ЭТО УКАЗАНИЕ ВАШЕЙ ПРОГРАММЕ ОТКУДА НАДО НАЧАТЬ ЧИТАТЬ КОД

    // В Джава методы - это действия, глаголы объекта пишутся всегда с маленькой буквы
    // они или белого цвета, или же синего, если ИСПОЛЬЗУЮТСЯ

    // Внутри ОБЪЕКТА любые ГЛАГОЛЫ - это МЕТОДЫ, они вызывает ДЕЙТСВИЯ
    // В некоторых языках программирования действия могут быть вне ОБЪЕКТА (например, С/С++, JS)
    // В таких языках программирования МЕТОДЫ называются ФУНКЦИЯМИ
    public static void main(String[] args){
        // Стандартная библиотека ввода и вывода
        // Standard I/O
        // '', ``, "" - JS
        // In Java строчка выводится лишь ""
        // Все ФИОЛЕТОВОЕ это ПЕРЕМЕННАЯ КЛАССА
        System.out.println("Welcome to Java.");

        System.out.println(); // если ты что-то передал + ПЛЮС автоматом ПЕРЕХОД НА НОВУЮ СТРОЧКУ, ln - LINE NEW

        // System.out.print() -> NOTHING, MISTAKE
        System.out.print(""); // NO NEW LINE BY DEFAULT - "" EMPTY STRING - ЭТО СПЕЦИАЛЬНЫЙ ЗНАК ДЛЯ КОМПА

        // Process finished with exit code 0 - КОД БЫЛ СКОМПИЛИРОВАН И ОБРАБОТАН ПРАВИЛЬНО
        // ГРАММАТИЧЕСКИХ ОШИБОК НЕ НАЙДЕНО
        // КОГДА ПРОГРАММА ВОЗВРАЩАЕТ ЗНАЧЕНИЕ 0 - это сигнал что все успешно
        // Любое значение не 0 - ОШИБКА
        System.out.println(10/0);
    }
}